name: forecast-iac

permissions:
  id-token: write 
  contents: read  

on:
  
  push:
    branches: 
      - 'develop'
      - 'qa'
  
  workflow_dispatch:

jobs:
  
  setup-stage:
    outputs:
      env-name: ${{ steps.env-name.outputs.env }}
    runs-on: ubuntu-latest
    steps:
    
    - name: Extract branch name
      id: env-name
      run: echo "env=${{ github.ref_name }}" >> $GITHUB_OUTPUT
  
  deploy_infraestructure:
    
    needs: [setup-stage]
    name: deploy infraestructure
    runs-on: ubuntu-latest
    environment: 
      name: ${{ needs.setup-stage.outputs.env-name }}
    steps:
 
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: dorny/paths-filter@v2
      name: filter-files
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          awsbackup:
            - 'cfns/awsbackup.yaml'
          s3buckets:
            - 'cfns/s3buckets.yaml'
          sns-alarms:
            - added|modified: 'cfns/sns-alarms.yaml'
          vpcflowlogs:
            - 'cfns/vpcflowlogs.yaml'
          develop-parameters:
            - 'develop-parameters.json'
            
    
    - name: aws-cli-installation
      id: install-aws-cli
      uses: unfor19/install-aws-cli-action@v1.0.3
      with:
        version: 2    
        verbose: false 
        arch: amd64    
        rootdir: ""    
        workdir: ""    
    - run: aws --version 
         
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws.session-token: ${{ secrets.AWS_SESSION_TOKEN }}

        aws-region: us-east-1

    - name: Python test
      run: |
       python -m pip install boto3
       ls
       
    # - name: Deploy Infraestructure - VPC Flow logs
    #   if: steps.filter.outputs.vpcflowlogs == 'true'
    #   run: |
    #    dst_branch=${GITHUB_REF_NAME}
    #    echo $dst_branch
    #    aws cloudformation deploy \
    #     --stack-name vpcflowlogs \
    #     --template-file cfns/vpcflowlogs.yaml --parameter-overrides file://$dst_branch-parameters.json --capabilities CAPABILITY_NAMED_IAM


    # - name: Deploy Infraestructure - S3 Buckets
    #   if: steps.filter.outputs.s3buckets == 'true'
    #   run: |
    #    dst_branch=${GITHUB_REF_NAME}
       
    #    aws cloudformation deploy \
    #     --stack-name S3BucketsForecastdataprocessed \
    #     --template-file cfns/s3buckets.yaml --parameter-overrides file://$dst_branch-parameters.json --capabilities CAPABILITY_NAMED_IAM


    # - name: Deploy Infraestructure - SNS Topic 
    #   if: steps.filter.outputs.sns-alarms == 'true'
    #   run: |
    #    dst_branch=${GITHUB_REF_NAME}
  
    #    aws cloudformation deploy \
    #     --stack-name SNSTopic-Alarm \
    #     --template-file cfns/sns-alarms.yaml --parameter-overrides file://$dst_branch-parameters.json

    # - name: Deploy Infraestructure - AWS Backup
      
    #   if: steps.filter.outputs.awsbackup == 'true'
    #   run: |
    #    dst_branch=${GITHUB_REF_NAME}

    #    aws cloudformation deploy \
    #     --stack-name AWSBackup \
    #     --template-file cfns/awsbackup.yaml --capabilities CAPABILITY_IAM --parameter-overrides file://$dst_branch-parameters.json